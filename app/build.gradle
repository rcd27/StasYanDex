apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'jacoco'

retrolambda{
    javaVersion JavaVersion.VERSION_1_6
    incremental true
}

jacoco{
    toolVersion = "0.7.9"
}

def coverageSourceDirs = [
        '../app/src/main/java'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest"){
    group = "Reporting"

    description = "Generate JaCoCo coverage reports"

    classDirectories = fileTree(
        dir: '../app/build/intermediates/classes/debug',
        excludes: ['**/R.class',
                   '**/R$*.class',
                   '**/*$ViewInjector*.*',
                   '**/*$ViewBinder*.*',   //DI
                   '**/*_MembersInjector*.*',  //DI
                   '**/*_Factory*.*',  //DI
                   '**/stasyandex/model/dictionary/dto/*.*', //dictionary dto model
                   '**/stasyandex/model/translation/dto/*.*', //translation dto model
                   '**/stasyandex/presenter/visualoject/*.*', //vo model
                   '**/stasyandex/di/**',
                   '**/BuildConfig.*',
                   '**/Manifest*.*',
                   '**/Lambda$*.class',
                   '**/Lambda.class',
                   '**/*Lambda.class',
                   '**/*Lambda*.class']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testDebugUnitTest.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

configurations.all{
    resolutionStrategy.preferProjectModules()
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "rcd27.github.com.stasyandex"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    //Network
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    //Rx
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.2.0'

    //DI
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0.2'

    //Android
    compile 'com.android.support:design:25.2.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:appcompat-v7:25.2.0'

    //Test
    compile 'org.mockito:mockito-core:2.7.22'

    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.6.0'
    testCompile 'org.robolectric:robolectric:3.3.2'
}
